trigger:
- main

pr:
- main

jobs:
- job: Planning
  displayName: Planning Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: echo "Planning"

- job: Code
  displayName: Code Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
  - script: echo "Code"

- job: Build
  displayName: Build Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: NodeTool@2
    inputs:
      versionSpec: '18.x'
    displayName: 'Set up Node.js'
  - script: yarn install
    displayName: 'Install dependencies'
  - script: yarn build
    displayName: 'Build Next.js app'
  - script: echo "Build"

- job: Test
  displayName: Test Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: echo "Test"

- job: Release
    displayName: Release Step
    pool:
      vmImage: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
    - task: UseAzureCLI@2
      inputs:
        azureSubscription: '<your-azure-subscription>'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: echo "Release"

- job: Deploy
  displayName: Deploy Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: az acr login --name pipelinegusccr
    displayName: 'Log in to Azure Container Registry'
  - script: |
      docker build -t pipelinegusccr.azurecr.io/my-nextjs-app:$(Build.SourceVersion) .
      docker push pipelinegusccr.azurecr.io/my-nextjs-app:$(Build.SourceVersion)
    displayName: 'Build and tag Docker image'
  - task: HashiCorpTerraformInstaller@0
    inputs:
      terraformVersion: '0.15.0'
    displayName: 'Install Terraform'
  - script: echo "Deploy"

- job: Operate
  displayName: Operate Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      az aks get-credentials --resource-group pipeline --name my-aks-cluster
      kubectl config view --minify --raw
    displayName: 'Get AKS Cluster Info'
  - script: cat $(HOME)/.kube/config
    displayName: 'Print AKS Cluster Info'
  - script: echo "Operate"

- job: Monitor
  displayName: Monitor Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: ls -la
    displayName: 'Current location'
  - script: rm -f *.tgz
    displayName: 'Remove .tgz'
  - script: rm -rf node_modules
    displayName: 'Remove node_modules'
  - script: rm yarn.lock
    displayName: 'Remove Yarn.lock'
  - script: rm terraform.tfstate
    displayName: 'Remove terraform.tfstate'
  - script: rm -rf .terraform .next
    displayName: 'Remove Big Items'
  - script: du -h --max-depth=1 | sort -hr | head -n 10
    displayName: 'List of largest'
  - script: pwd
    displayName: 'Current Path'
  - script: echo "Monitor"

- job: FinalDeploy
  displayName: Final Deploy Step
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      helm upgrade --install my-nextjs-app . \
        --set image.repository=pipelinegusccr.azurecr.io/my-nextjs-app \
        --set image.tag=$(Build.SourceVersion)
    displayName: 'Deploy with Helm'
  - script: du -h --max-depth=1 | sort -hr | head -n 10
    displayName: 'List of largest'
  - script: kubectl rollout status deployment/my-nextjs-app
    displayName: 'Wait for deployment to finish'
  - script: echo "Final Deploy"
